<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAARQAA
        AKsAAACzAAAA3gAAALkAAABCAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAA
        AH4AAACZAAAAWQAAAEoAAADsAAAA/wAAAOgAAACHAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAA
        AGEAAAClAAAAaAAAACwAAAAJAAAAWwAAAP4AAAD/AAAA/wAAAP4AAADTAAAAYgAAAA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AEIAAACgAAAAhwAAAFoAAAAlAAAAFgAAABkAAABrAAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD5AAAAtAAA
        AD8AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACYAAACDAAAAmwAAAFsAAAAVAAAAQQAAACgAAAAWAAAANQAAAGwAAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA7AAAAI8AAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABIAAABnAAAAngAAAFQAAAAvAAAAIQAAAA8AAAAvAAAAIAAAABoAAABBAAAAZwAAAP4AAAD/AAAA9AAA
        AK8AAADeAAAA/wAAAP8AAAD/AAAA/wAAANcAAABoAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA9AAAAlwAAAHIAAABCAAAAHgAAAB0AAAAsAAAADAAAADcAAAAjAAAAEwAAACYAAABoAAAA/gAA
        APwAAAB2AAAAHQAAAKkAAAD/AAAA3QAAAL4AAAD6AAAA/wAAAPoAAAC5AAAAPAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAOwAAAKgAAABaAAAAEAAAAD4AAAAnAAAAHAAAAD0AAAALAAAAIgAAABEAAAAPAAAAPgAA
        AHEAAAD9AAAA/wAAAMkAAACDAAAAVAAAAOYAAADkAAAAagAAAHcAAADfAAAA/wAAAP8AAADeAAAAOgAA
        AAAAAAAAAAAAAAAAAAYAAACNAAAAUAAAADMAAAATAAAARAAAACsAAAAdAAAAQgAAAAoAAAAcAAAADQAA
        ACYAAABKAAAAcQAAAP0AAAD/AAAA/wAAAP0AAABmAAAAoAAAAP8AAAD0AAAAogAAAK0AAAD/AAAA/wAA
        AP8AAACmAAAABQAAAAAAAAAAAAAAHAAAAJEAAAAsAAAAEAAAAAkAAAAvAAAAIgAAAB0AAABSAAAADgAA
        ABoAAAARAAAAGQAAAD0AAAByAAAA/QAAAP8AAACwAAAAVAAAABsAAACUAAAA/wAAAP8AAAD+AAAA+wAA
        AP8AAAD/AAAA/wAAANcAAAAYAAAAAAAAAAAAAAAiAAAAjQAAACYAAAASAAAAAAAAADQAAAAmAAAAGgAA
        ADcAAAAaAAAALAAAACUAAAALAAAAOAAAAHQAAAD9AAAA+gAAAE4AAAA5AAAAeQAAAOEAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA4AAAAB4AAAAAAAAAAAAAACIAAACNAAAAFwAAACgAAAAFAAAAIgAA
        ABUAAAALAAAAEAAAAAIAAAAdAAAAMgAAAA0AAAAOAAAAYAAAAP4AAAD/AAAAcQAAAJgAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADgAAAAHgAAAAAAAAAAAAAAIgAAAI0AAAAWAAAALAAA
        AAkAAAAcAAAAFQAAABkAAAApAAAADAAAACIAAAAeAAAACwAAAAgAAABdAAAA/gAAAP8AAADTAAAAQwAA
        AGEAAADjAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOAAAAAeAAAAAAAAAAAAAAAiAAAAjQAA
        ABUAAAAmAAAAEQAAACwAAAAmAAAAIgAAAE8AAAAdAAAALQAAABAAAAAJAAAAGQAAAGcAAAD+AAAA/wAA
        AP8AAABzAAAAXwAAAOAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA4AAAAB4AAAAAAAAAAAAA
        ACIAAACNAAAADgAAAEQAAAAXAAAAGwAAADUAAAAYAAAANwAAABoAAABCAAAARgAAAAcAAAAtAAAAdAAA
        APoAAAD/AAAA/wAAAN0AAADpAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADgAAAAHgAA
        AAAAAAAAAAAAIgAAAIwAAAAZAAAAKAAAAAgAAAAmAAAAEgAAABYAAAA9AAAAIAAAACkAAAAxAAAABQAA
        AAQAAAAkAAAA0gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AOAAAAAeAAAAAAAAAAAAAAAiAAAAjAAAABsAAAAYAAAAAgAAADQAAAAeAAAAFgAAAFQAAAAdAAAAKgAA
        ADcAAAAqAAAAEwAAAAEAAAA+AAAAyQAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA4AAAAB4AAAAAAAAAAAAAACIAAACMAAAAHQAAABwAAAACAAAAPQAAAEIAAAAXAAAARgAA
        ABQAAAAkAAAANAAAADIAAABGAAAAKQAAAAgAAAAZAAAAgwAAAOgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADgAAAAHgAAAAAAAAAAAAAAIgAAAI0AAAAUAAAAIwAAABAAAAApAAAALwAA
        ABoAAAApAAAAGwAAAAIAAAAcAAAAFQAAADwAAAA3AAAALAAAABAAAAACAAAAOgAAALEAAAD5AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOAAAAAeAAAAAAAAAAAAAAAiAAAAjQAAABUAAAAoAAAAHgAA
        ACwAAAA7AAAAEAAAAAgAAAAGAAAAAAAAAA0AAAAoAAAAEAAAAB0AAAAuAAAANAAAAA4AAAAAAAAADQAA
        AGUAAADXAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA4AAAAB4AAAAAAAAAAAAAACIAAACNAAAAFAAA
        ACQAAAAPAAAAGQAAACQAAAAqAAAAHQAAABQAAAAAAAAAFwAAACYAAAAmAAAADgAAAAkAAAALAAAAIwAA
        AB0AAAAbAAAAAgAAACQAAACUAAAA8AAAAP8AAAD/AAAA/wAAAP8AAADgAAAAHgAAAAAAAAAAAAAAIgAA
        AI0AAAAUAAAAHQAAAAAAAAAOAAAAJQAAAA8AAAAdAAAAIwAAABAAAAAhAAAAFQAAABkAAAAqAAAAPQAA
        ABsAAAAFAAAAHwAAADoAAAAsAAAACwAAAAYAAABIAAAAwAAAAPwAAAD/AAAA/wAAAOAAAAAeAAAAAAAA
        AAAAAAAcAAAAkQAAAAoAAAAFAAAABgAAABgAAABOAAAATAAAABcAAAAWAAAAFQAAADIAAABAAAAAHAAA
        AAsAAAA2AAAAUAAAACYAAAAHAAAAEAAAADIAAAA5AAAAFAAAAAMAAAATAAAAdwAAAN8AAADxAAAAzQAA
        ABgAAAAAAAAAAAAAAAYAAACOAAAANgAAAB0AAAAcAAAAAAAAAB8AAABCAAAAOAAAACsAAAAPAAAADwAA
        AEEAAABRAAAAIQAAAAYAAAAjAAAAIgAAAAQAAAACAAAADQAAAB8AAABBAAAALgAAABwAAAAFAAAAIQAA
        AGkAAACTAAAABgAAAAAAAAAAAAAAAAAAADwAAACdAAAATAAAACUAAAAOAAAABAAAABEAAAAjAAAARQAA
        AEEAAAAiAAAAGgAAACcAAAAyAAAANgAAABMAAAALAAAAFAAAACkAAABEAAAAEwAAACUAAAA6AAAARwAA
        ACEAAAAsAAAAlwAAADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAACWAAAAfAAAADwAAAAuAAAASAAA
        ABYAAAAfAAAAPQAAAFoAAAA6AAAAFwAAABIAAAAmAAAAKQAAACMAAAAfAAAAMQAAADcAAAA0AAAAHwAA
        AAMAAAAoAAAAdQAAAJgAAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAABlAAAAmwAA
        AHcAAAA9AAAANQAAAC8AAAAQAAAAIAAAADYAAAAuAAAAHwAAAAUAAAAjAAAAVAAAAFMAAAAkAAAAEAAA
        ABoAAABEAAAAXAAAAJgAAABnAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAmAAAAgQAAAJYAAABUAAAASgAAAEEAAAAiAAAABQAAABkAAAAeAAAAIAAAAAgAAAATAAAAJgAA
        AD0AAAAgAAAANQAAAI4AAACHAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAAQQAAAJcAAACMAAAAVwAAAE0AAAA1AAAAGQAAABQAAAANAAAADQAA
        ADUAAAAZAAAANwAAAJAAAACcAAAAQgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAF8AAACgAAAAbwAAAEAAAAAoAAAALQAA
        AAsAAAAeAAAASwAAAHgAAACgAAAAYQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAB+AAAAmwAA
        AGEAAABNAAAAKQAAADoAAACXAAAAfgAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAABEAAAAoAAAAMMAAAC4AAAAngAAAEQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//AP///gB///gAH//gAAf/wAAD/wAAAP4AAAB8AAAAOAAAABgAAAAYQA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAQEAGAEAABhAAAAYAAAAGCAAABwAAAA+AA
        AAfwAAAP/AAAP/4AAH//gAH//+AH///wD/8=
</value>
  </data>
</root>